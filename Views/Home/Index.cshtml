@model ProductSearchInputModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <h1>Ricerca prodotti</h1>
    <p>Digita un testo o seleziona la categoria, poi clicca il bottone per cercare i prodotti. La ricerca verrà inviata via ajax, perciò la pagina corrente non si ricaricherà.</p>
    <form class="form-inline" asp-action="Search" method="get" onsubmit="return sendFormWithAjax(this);">
        <label>Descizione</label>
        <input type="text" class="form-control mr-3 ml-1" asp-for="Search" placeholder="Es. Carota">
        <label>Categoria</label>
        <select class="form-control mr-3 ml-1" asp-for="Category">
            <option></option>
            <option>Frutta</option>
            <option>Verdura</option>
        </select>
        <button class="btn btn-primary">Cerca</button>
    </form>

    <div id="results">
    </div>
</div>
@section Scripts
{
    <script>
        function sendFormWithAjax(form) {
            form = $(form);
            //Invio una richiesta ajax al server, in modo che la pagina corrente non debba ricaricarsi
            $.ajax({
                method: form.attr('method'),
                url: form.attr('action'),
                data: form.serialize(),
                dataType: 'html' //Mi aspetto che il server restituisca un pezzetto di HTML
            }).then(function(results) {
                //Mostro nella pagina l'HTML che mi è stato restituito dal server
                $("#results").html(results);
            });
            //Inibisco il submit del form perché la richiesta al server ormai è stata inviata con ajax
            return false;
        }
    </script>
}